-- Ensure created_at defaults to now()
alter table public.folders
  alter column created_at set default now();

-- Option A: add identity if the column isn't identity yet
do $$
begin
  if not exists (
    select 1
    from information_schema.columns
    where table_schema = 'public'
      and table_name = 'folders'
      and column_name = 'id'
      and is_identity = 'YES'
  ) then
    alter table public.folders
      alter column id add generated by default as identity;
  end if;
end
$$;

-- Option B (fallback for older PG): use a sequence default
do $$
begin
  if not exists (select 1 from pg_class where relname = 'folders_id_seq') then
    create sequence public.folders_id_seq;
  end if;

  -- only set default if id still has no default
  if not exists (
    select 1
    from pg_attrdef d
    join pg_class c on d.adrelid = c.oid
    join pg_attribute a on a.attrelid = c.oid and a.attnum = d.adnum
    where c.relname = 'folders' and a.attname = 'id'
  ) then
    alter table public.folders
      alter column id set default nextval('public.folders_id_seq');
  end if;
end
$$;

-- Make sure there's a PK (no-op if it exists)
do $$
begin
  if not exists (
    select 1 from pg_constraint
    where conrelid = 'public.folders'::regclass
      and contype = 'p'
  ) then
    alter table public.folders add primary key (id);
  end if;
end
$$;

-- Align the sequence with current max(id)
select setval(
  'public.folders_id_seq',
  coalesce((select max(id) from public.folders), 0)
);
